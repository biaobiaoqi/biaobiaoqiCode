/*
作图，容易找出规律。空想就别了……
*/

/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
 //递归解法
public class Solution {
    public void connect(TreeLinkNode root) {
        if (root == null) return;
        root.next = null;//Take care.
        TreeLinkNode left = root.left;
        TreeLinkNode right = root.right;
        
        connect(left);
        connect(right);
        
        while(left != null) {
            left.next = right;
            left = left.right;
            right = right.left;
        }
    }
}

//层序遍历解法。但这种方法 使用了额外空间。
public class Solution {
    public void connect(TreeLinkNode root) {
        if (root == null) return;
        
        Queue<TreeLinkNode> que = new LinkedList<TreeLinkNode>();
        que.add(root);
        while (que.size() != 0) {
            Queue<TreeLinkNode> tmpQue = new LinkedList<TreeLinkNode>();
            while(que.size() != 0) {
                TreeLinkNode curNode = que.poll();
                if (curNode.left != null) tmpQue.add(curNode.left);
                if (curNode.right != null) tmpQue.add(curNode.right);
                curNode.next = que.peek();
                curNode = curNode.next;
            }
            que = tmpQue;
        }
    }
}
