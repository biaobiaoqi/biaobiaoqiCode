/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        this.preorder = preorder;
        this.inorder = inorder;
        return construct(0, preorder.length - 1, 0, inorder.length - 1);
    }
    
    private int[] preorder, inorder;
    private TreeNode construct(int pres, int pree, int ins, int ine) {
        if (pres > pree) return null;
        TreeNode root = new TreeNode(preorder[pres]);
        int i = ins;
        for (; i <= ine; i ++ ) 
            if (preorder[pres] == inorder[i])
                break;
        root.left = construct(pres + 1, pres + i - ins, ins, i - 1);
        root.right = construct(pres + i - ins + 1, pree, i + 1, ine);
        return root;
    }
}
