/*
细节实现题，需要先整清楚总体框架，理清楚corner case，再细心的往里面填入实现逻辑。

但是这个实现并不优美。实际上，可以使用stack来实现，并使用string的find方法找到每次的目录名称。这样的实现也体现了对数据结构和常见API的掌握。
*/

public class Solution {
    public String simplifyPath(String path) {
        int n = path.length();
        char[] chs = new char[n];
        int index = 0;
        for (int i = 0; i < n;) {
            while(i < n && path.charAt(i) == '/') i ++;
            
            if (i + 1 < n && path.charAt(i) == '.' && path.charAt(i + 1) == '.' && (i + 2 == n || path.charAt(i + 2) == '/')) { //take care of /...
                if (index != 0) index --; //Take care of there is no more path to backforward
                while( index >= 1 && chs[index] != '/') {
                    index --;
                }
                i += 2;
            } else if (i < n && path.charAt(i) == '.' && (i + 1 == n || path.charAt(i + 1) == '/')) { //take care of .vimrc
                i ++;
                continue;
            } else if (i < n ){
                chs[index ++] = '/';
                while(i < n && path.charAt(i) != '/') {
                    chs[index++] = path.charAt(i++);
                }
            }
        }
        
        if(index == 0)
            return "/";
        
        return new String(chs, 0, index);
        
    }
}
