/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode swapPairs(ListNode head) {
        if (head == null || head.next == null)
            return head;

        ListNode node1 = head;
        ListNode node2 = head.next;
        ListNode preNode = new ListNode(-1);
        head = preNode;
        
        //1.Using three variable to stand for nodes in every loop.
        //2.Draw process in graph.
        //3.Write down your code! All things are straightforward.
        while(node2 != null) {
            preNode.next = node2;
            node1.next = node2.next;
            node2.next = node1;
            preNode = node1;
            node1 = node1.next;
            node2 = node1 != null ? node1.next : null;
        }
        
        return head.next;
    }
}
