//合理的边界条件判定，能让循环整洁有序，事半功倍。

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode swapPairs(ListNode head) {
        ListNode h = new ListNode(-1);
        h.next = head;
        ListNode prev = h;
        ListNode cur = head;
        while (cur != null && cur.next != null) {
            ListNode tmp = cur.next.next;
            cur.next.next = cur;
            prev.next = cur.next;
            cur.next = tmp;
            
            prev = cur;
            cur = cur.next;
        }
        return h.next;
    }
}
