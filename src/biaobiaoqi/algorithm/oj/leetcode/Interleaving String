/*
使用滚动数组对二维DP实现降维。

注意：
* 状态转移基于字符的比较。从简单递归优化而来。
* 注意滚动数组滚动的方向！！

*/
public class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        int m = s1.length();
        int n = s2.length();
        if (s3.length() != m + n) return false;
        
        if (m < n) 
            return isInterleave(s2, s1, s3);
            
        boolean[] f = new boolean[n + 1];
        f[0] = true;
        for (int i = 1; i <= n; i ++)
            f[i] = f[i - 1] && (s2.charAt(i - 1) == s3.charAt(i - 1));
        
        for (int i = 1; i <= m; i ++) {
            f[0] = f[0] & (s1.charAt(i - 1) == s3.charAt(i - 1));
            
            for (int j = 1; j <= n; j ++)
                f[j] = (f[j] && s1.charAt(i - 1) == s3.charAt(i + j - 1)) 
                        || (f[j - 1] && s2.charAt(j - 1) == s3.charAt(i + j - 1));
        }
            
        return f[n];
    }
}
