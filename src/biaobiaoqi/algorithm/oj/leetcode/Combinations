public class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> ret = new LinkedList<List<Integer>>();
        List<Integer> solu = new ArrayList<Integer>();
        dfs(ret, solu, k, n, 0);
        return ret;
    }
    
    private void dfs(List<List<Integer>> ret, List<Integer> solu, int k, int n, int curIndex) {
        if (solu.size() == k) {
            ret.add(new ArrayList(solu));
            return;
        }
        
        for (int i = curIndex + 1; i <= n; i++) {
                solu.add(i);
                dfs(ret, solu, k, n, i);
                solu.remove(solu.size() - 1);
        }
    }
}
