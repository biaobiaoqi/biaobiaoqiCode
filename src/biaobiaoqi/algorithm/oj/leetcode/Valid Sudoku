//由于只需要检查错误，一次检查中，1-9的9个数字都不可能两次出现，只要两次出现，就算错误。构造遍历即可。
//这个题目，在逻辑实现的基础上，可以对代码结构进行很多的优化。
public class Solution {
    public boolean isValidSudoku(char[][] board) {
        boolean[] flag = new boolean[10];
        boolean[] flag2 = new boolean[10];
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (!checked(flag, board[i][j]))
                    return false;
                if (!checked(flag2, board[j][i]))
                    return false;
            }
            Arrays.fill(flag, false);
            Arrays.fill(flag2, false);
        }
        
        for (int i = 0; i < 9; i += 3)
            for (int j = 0; j < 9; j += 3) {
                for (int a = i; a < i+3; a++) 
                    for (int b = j; b < j+3; b++)
                        if (!checked(flag, board[a][b]))
                            return false;
                Arrays.fill(flag, false);
            }
        return true;
    }
    
    private boolean checked(boolean[] flag, char ch) {
        if (ch != '.') {
            if (!flag[ch - '0'])
                flag[ch - '0'] = true;
            else
                return false;
        }
        return true;
    }
}
