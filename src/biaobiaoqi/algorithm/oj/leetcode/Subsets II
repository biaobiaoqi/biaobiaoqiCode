//将重复数字当做一个整体来考虑。
public class Solution {
    public List<List<Integer>> subsetsWithDup(int[] num) {
        List<List<Integer>> ret = new LinkedList<List<Integer>>();
        List<Integer> solu = new ArrayList<Integer>();
        Arrays.sort(num);
        dfs(num, ret, solu, 0);
        return ret;
    }
    
    private void dfs(int[] num, List<List<Integer>> ret, List<Integer> solu, int index) {
        if (index == num.length) {
            ret.add(new ArrayList<Integer>(solu));
            return;
        }
        
        int repeat = 0;
        while (index + repeat < num.length && num[index + repeat] == num[index]) 
            repeat++;
        
        for (int i = 0; i <= repeat; i++) {
            for (int j = 0; j < i; j++)
                solu.add(num[index]);
            dfs(num, ret, solu, index + repeat);
            for (int j = 0; j < i; j++)
                solu.remove(solu.size() - 1);
        }
    }
}
